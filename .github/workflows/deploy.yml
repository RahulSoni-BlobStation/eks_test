#deploy on ek
name: Deploy sample app to EKS

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

env:
  AWS_REGION: us-east-1
  EKS_CLUSTER_NAME: prod-demo-cluster
  NAMESPACE: sample-app

permissions:
  contents: read

jobs:
  deploy:
    name: Deploy sample app to EKS
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Update kube config
      run: aws eks update-kubeconfig --name $EKS_CLUSTER_NAME --region $AWS_REGION

    - name: Setup Helm
      run: |
        curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash
    - name: Install AWS Load Balancer Controller CRDs
      run: |
        kubectl apply -k github.com/aws/eks-charts/stable/aws-load-balancer-controller//crds?ref=master

    - name: Deploy AWS Load Balancer controller
      run: |
        kubectl apply -f k8s/aws-load-balancer-controller.yaml

    - name: Deploy sample app manifests
      run: |
        kubectl apply -f k8s/namespace.yaml
        kubectl apply -f k8s/configmap.yaml
        kubectl apply -f k8s/deployment.yaml
        kubectl apply -f k8s/service.yaml

    - name: Deploy Ingress
      run: |
        kubectl apply -f k8s/ingress.yaml

    - name: Deploy metrics-server
      run: |
        kubectl apply -f k8s/monitoring.yaml

    - name: Install Prometheus/Grafana via Helm
      run: |
        helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
        helm repo add grafana https://grafana.github.io/helm-charts
        helm repo update
        # Optional: create monitoring namespace, but kube-system often used for metrics/grafana
        # kubectl create namespace monitoring || true
        helm install prometheus prometheus-community/prometheus --namespace kube-system
        helm install grafana grafana/grafana --namespace kube-system --set adminPassword='admin'

    - name: Wait for backend rollout
      run: |
        kubectl rollout status deployment/backend-app -n $NAMESPACE

    - name: Get service and pod info
      run: |
        kubectl get svc -n $NAMESPACE
        kubectl get pods -n $NAMESPACE
#this is a test
